<?xml version="1.0"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="securityConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings, Microsoft.Practices.EnterpriseLibrary.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="securityCryptographyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" >
      <sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
        <section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
        <sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">
          <section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="Everywhere" />
          <section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
          <section name="roleService" type="System.Web.Configuration.ScriptingRoleServiceSection, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" allowDefinition="MachineToApplication" />
        </sectionGroup>
      </sectionGroup>
    </sectionGroup>
    <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" requirePermission="false" />
  </configSections>
  <securityConfiguration defaultAuthorizationInstance="" defaultSecurityCacheInstance="">
    <securityCacheProviders>
      <add cacheManagerInstanceName="Identity Cache Manager" defaultSlidingSessionExpirationInMinutes="5"
        defaultAbsoluteSessionExpirationInMinutes="60" type="Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Identity Caching Store Provider" />
    </securityCacheProviders>
  </securityConfiguration>

  <loggingConfiguration name="Logging Application Block" tracingEnabled="true"
    defaultCategory="" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add fileName="C:\wwwroot\449962\ebubble.risarc.com\web\content\Files\logs\error.log" footer="----------------------------------------"
        formatter="" header="----------------------------------------"
        rollFileExistsBehavior="Overwrite" rollInterval="None" rollSizeKB="0"
        timeStampPattern="yyyy-MM-dd" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Error Rolling Flat File Trace Listener" />
      <add fileName="C:\wwwroot\449962\ebubble.risarc.com\web\content\Files\logs\rolling.log" footer="----------------------------------------"
        formatter="Text Formatter" header="----------------------------------------"
        rollFileExistsBehavior="Overwrite" rollInterval="None" rollSizeKB="0"
        timeStampPattern="yyyy-MM-dd" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Rolling Flat File Trace Listener" />
    </listeners>
    <formatters>
      <add template="Timestamp: {timestamp}&#xD;&#xA;Message: {message}&#xD;&#xA;Category: {category}&#xD;&#xA;Priority: {priority}&#xD;&#xA;EventId: {eventid}&#xD;&#xA;Severity: {severity}&#xD;&#xA;Title:{title}&#xD;&#xA;Machine: {machine}&#xD;&#xA;Application Domain: {appDomain}&#xD;&#xA;Process Id: {processId}&#xD;&#xA;Process Name: {processName}&#xD;&#xA;Win32 Thread Id: {win32ThreadId}&#xD;&#xA;Thread Name: {threadName}&#xD;&#xA;Extended Properties: {dictionary({key} - {value}&#xD;&#xA;)}"
        type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="Error">
        <listeners>
          <add name="Error Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="Security">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Error Rolling Flat File Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Controller Level Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="NotifyRethrow" name="Exception" />
        </exceptionTypes>
      </add>
      <add name="Global Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="NotifyRethrow" name="Exception">
            <exceptionHandlers>
              <add logCategory="Error" eventId="100" severity="Error" title="Enterprise Library Exception Handling"
                formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                name="Logging Handler" />
            </exceptionHandlers>
          </add>
          <add type="SpiegelDg.Common.Validation.InvalidActionException, SpiegelDg.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"
            postHandlingAction="None" name="InvalidActionException">
            <exceptionHandlers>
              <add logCategory="Error" eventId="100" severity="Error" title="Enterprise Library Exception Handling"
                formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                name="Logging Handler" />
            </exceptionHandlers>
          </add>
          <add type="System.Security.SecurityException, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
            postHandlingAction="None" name="SecurityException">
            <exceptionHandlers>
              <add logCategory="Security" eventId="100" severity="Critical"
                title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
                name="Logging Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <dataConfiguration />
  <connectionStrings>
    <add name="ApplicationServices" connectionString="Data Source=MSSQL0805\inst1;Initial Catalog=449962_EBubbleMembership;Persist Security Info=True;User ID=449962_MemAdmin;Password=Spieg9165"
      providerName="System.Data.SqlClient" />
    <add name="Caching" connectionString="Data Source=mssql0806.wc2\inst2;Initial Catalog=449962_Caching;Persist Security Info=True;User ID=449962_CacheAdm;Password=Spieg9165"
      providerName="System.Data.SqlClient" />
    <add name="RMSeBUBBLE" connectionString="Data Source=MSSQL0805\inst1;Initial Catalog=449962_EBubbleDocuments;Persist Security Info=True;User ID=449962_DocsAdmin;Password=Spieg9165"
      providerName="System.Data.SqlClient" />
    <add name="RMSeBUBBLESetup" connectionString="Data Source=MSSQL0805\inst1;Initial Catalog=449962_EBubbleDocuments;Persist Security Info=True;User ID=449962_DocsAdmin;Password=Spieg9165"
      providerName="System.Data.SqlClient" />
    <add name="Logging" connectionString="Data Source=MSSQL0805\inst1;Initial Catalog=449962_Logging;Persist Security Info=True;User ID=449962_LogAdmin;Password=Spieg9165"
      providerName="System.Data.SqlClient" />
  </connectionStrings>
  <securityCryptographyConfiguration>
    <hashProviders>
      <add algorithmType="System.Security.Cryptography.SHA256Managed, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        saltEnabled="true" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="SHA256Managed" />
    </hashProviders>
    <symmetricCryptoProviders>
      <add algorithmType="System.Security.Cryptography.RijndaelManaged, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        protectedKeyFilename="DataParams.key" protectedKeyProtectionScope="CurrentUser"
        type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="DataEncryptProvider" />
      <add algorithmType="System.Security.Cryptography.RijndaelManaged, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
        protectedKeyFilename="ExternalParams.key" protectedKeyProtectionScope="CurrentUser"
        type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="FrontEndEncryptProvider" />
    </symmetricCryptoProviders>
  </securityCryptographyConfiguration>
  <cachingConfiguration defaultCacheManager="Identity Cache Manager">
    <cacheManagers>
      <add expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="10000"
        numberToRemoveWhenScavenging="10" backingStoreName="Data Cache Storage"
        type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Identity Cache Manager" />
    </cacheManagers>
    <backingStores>
      <add databaseInstanceName="Caching" partitionName="Identity"
        encryptionProviderName="" type="Microsoft.Practices.EnterpriseLibrary.Caching.Database.DataBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching.Database, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
        name="Data Cache Storage" />
    </backingStores>
  </cachingConfiguration>
  <appSettings>
    <add key="MedicalDocumentsBaseDirectory" value="C:\wwwroot\449962\ebubble.risarc.com\web\content\Files\MedicalDocuments\" />
    <add key="ComplianceDocumentsBaseDirectory" value="C:\wwwroot\449962\ebubble.risarc.com\web\content\Files\ComplianceDocuments\" />
    <add key="FilledOutComlianceDocumentsBaseDirectory" value="C:\wwwroot\449962\ebubble.risarc.com\web\content\Files\FilledOutComlianceDocuments\" />
    <add key="MaxAttemptedVerifications" value="3" />
    <add key="EmailTemplatePath" value="C:\wwwroot\449962\ebubble.risarc.com\web\content\Emails\" />
    <add key="EmailFromAddress" value="rmsebubble@risarconline.com" />
    <add key="SiteBaseDirectory" value="http://ebubble.risarc.com.asp1-5.dfw1-2.websitetestlink.com/" />
    <add key="DocumentPageSize" value="20" />
    <add key="UseHardCodedEncryption" value="True"/>
    <add key="RejectedFileExtensions" value="arc,arj,as,b64,btoa,bz,cpt,gz,hqx,iso,lha,lzh,mim,mme,pak,pf,rar,sea,sit,sitx,tar,gz,tbz,tbz2,tgz,uu,uue,z,zip,zoo" />
    <add key="DocumentDownloadExpirationInDays" value="7" />
    <!--minimum length for comments (also for purpose of request and purpose of document) when they are required-->
    <add key="MinimumCommentsLength" value="25" />
    <!--will set downloads to expire in 7 days-->
    <add key="LowestMinimumDocumentPrice" value="7.00" />
    <!--The lowest minimum document price that can be set for a provider-->
  </appSettings>
  <system.web>

    <identity impersonate="true"  userName="DFW\danoved" password="DqjLSxM0X3fxjf" />
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
    -->
    <!--<trust level="Medium"/>-->
    <compilation debug="true">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Mvc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Data.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn"
             timeout="15"
             
             slidingExpiration="true" />
    </authentication>
    <membership defaultProvider="AspNetSqlMembershipProvider">
      <providers>
        <clear />
        <add connectionStringName="ApplicationServices"
             enablePasswordRetrieval="false"
             enablePasswordReset="true"
             requiresQuestionAndAnswer="false"
             requiresUniqueEmail="false"
             passwordFormat="Hashed"
             maxInvalidPasswordAttempts="3"
             minRequiredPasswordLength="8"
             minRequiredNonalphanumericCharacters="0"
             passwordAttemptWindow="10"
             
             passwordStrengthRegularExpression="([A-Za-z0-9]{0,}[A-Z]{1,1}[A-Za-z0-9]{0,}[0-9]{1,1}[A-Za-z0-9]{0,})|([A-Za-z0-9]{0,}[0-9]{1,1}[A-Za-z0-9]{0,}[A-Z]{1,1}[A-Za-z0-9]{0,})"
             applicationName="RISARC.Web.EBubble"
             name="RMSeBubbleMembershipProvider"
             type="RISARC.Membership.Implementation.Repository.SqlServer.RMSeBubbleMembershipProvider, RISARC.Membership.Implementation" />
        <!--this left here to allow asp.net configuration manager:-->
        <add connectionStringName="ApplicationServices"
            enablePasswordRetrieval="false"
            enablePasswordReset="true" requiresQuestionAndAnswer="true" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="3" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="RISARC.Web.EBubble"
            name="ForgotPasswordProvider"
            type="RISARC.Membership.Implementation.Repository.SqlServer.RMSeBubbleMembershipProvider, RISARC.Membership.Implementation" />
        <!--this left here to allow asp.net configuration manager:-->

        <add connectionStringName="ApplicationServices"
             enablePasswordRetrieval="false"
             enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="3" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="RISARC.Web.EBubble" name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </providers>
    </membership>
    <profile>
      <providers>
        <clear />
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" applicationName="RISARC.Web.EBubble" />
      </providers>
    </profile>
    <roleManager enabled="true">
      <providers>
        <clear />
        <add connectionStringName="ApplicationServices" applicationName="RISARC.Web.EBubble" name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <add applicationName="RISARC.Web.EBubble" name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </providers>
    </roleManager>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
    -->
    <customErrors mode="Off">
    </customErrors>
    <pages>
      <controls>
        <add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add tagPrefix="asp" namespace="System.Web.UI.WebControls" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      </controls>
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Linq" />
        <add namespace="System.Collections.Generic" />
        <add namespace="Microsoft.Web.Mvc" />
        <add namespace="RISARC.Emr.Web.DataTypes" />
        <add namespace="SpiegelDg.Common.Web.Extensions" />
        <add namespace="RISARC.Emr.Web.Extensions" />
        <add namespace="SpiegelDg.Common.Web.Model" />
        <add namespace="RISARC.Web.EBubble.Models.Extensions"/>
      </namespaces>
    </pages>
    <httpHandlers>
      <remove verb="*" path="*.asmx" />
      <add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="*" path="*_AppService.axd" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" validate="false" />
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
    </httpHandlers>
    <httpModules>
      <add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web.Routing, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="PerRequestLifestyle" type="Castle.MicroKernel.Lifestyle.PerWebRequestLifestyleModule, Castle.MicroKernel" />
    </httpModules>
  </system.web>
  <system.net>
    <mailSettings>
      <smtp from="rmsebubble@risarconline.com">
        <network host="smtp.gmail.com" password="test12345678" port="587" userName="risarcsendertest@gmail.com" />
      </smtp>
    </mailSettings>
  </system.net>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5" />
        <providerOption name="WarnAsError" value="false" />
      </compiler>
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" warningLevel="4" type="Microsoft.VisualBasic.VBCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5" />
        <providerOption name="OptionInfer" value="true" />
        <providerOption name="WarnAsError" value="false" />
      </compiler>
    </compilers>
  </system.codedom>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->


  <castle>
    <components>
      <!--services-->
      <component id="RMSeBubbleMempershipService" service="RISARC.Membership.Service.IRMSeBubbleMempershipService, RISARC.Membership" type="RISARC.Membership.Implementation.Service.RMSeBubbleMempershipService, RISARC.Membership.Implementation" lifestyle="PerWebRequest">
      </component>
      <component id="MembershipAdministrationService" service="RISARC.Membership.Service.IMembershipAdministrationService, RISARC.Membership" type="RISARC.Membership.Implementation.Service.MembershipAdministrationService, RISARC.Membership.Implementation" lifestyle="PerWebRequest">
      </component>
      <!--<component id="MempershipInvitationService" service="RISARC.Membership.Service.IMembershipInvitationService, RISARC.Membership" type="RISARC.Membership.Implementation.Service.MembershipInvitationService, RISARC.Membership.Implementation">
      </component>-->
      <component id="RISARCEmailService" service="RISARC.Email.Service.IRISARCEmailService, RISARC.Email" type="RISARC.Email.Implementation.Service.RISARCEmailService, RISARC.Email.Implementation">
        <parameters>

        </parameters>
      </component>
      <!--Authentication Related-->
      <component id="TokenBasedUserGrabber" service="SpiegelDg.Common.Service.IUserGrabber, SpiegelDg.Common" type="SpiegelDg.Security.Service.TokenBasedUserGrabber, SpiegelDg.Security" lifestyle="PerWebRequest">
        <parameters>
          <tokenRepository>${TokenRepository}</tokenRepository>
          <tokenGrabbingService>${TokenService}</tokenGrabbingService>
        </parameters>
      </component>
      <component id="FormsAuthenticationService" service="SpiegelDg.Security.Service.IFormsAuthenticationService, SpiegelDg.Security" type="SpiegelDg.Security.Service.TokenBasedAuthorizationService, SpiegelDg.Security" lifestyle="PerWebRequest">
        <parameters>
          <tokenRepository>${TokenRepository}</tokenRepository>
          <tokenGrabbingService>${TokenService}</tokenGrabbingService>
        </parameters>
      </component>
      <component id="TokenService" service="SpiegelDg.Security.Service.ITokenGrabbingService, SpiegelDg.Security" type="SpiegelDg.Security.Service.CookiesBasedTokenService, SpiegelDg.Security" lifestyle="PerWebRequest" />
      <!--Services-->
      <component id="DocumentAccessAuditor" service="RISARC.Documents.Service.IDocumentAccessAuditor, RISARC.Documents" type="RISARC.Documents.Implementation.Service.DocumentAccessAuditor, RISARC.Documents.Implementation">
      </component>
      <component id="UserDocumentsService" service="RISARC.Documents.Service.IUserDocumentsService, RISARC.Documents" type="RISARC.Documents.Implementation.Service.UserDocumentsService, RISARC.Documents.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <filesService>${FilesService}</filesService>
          <documentRepository>${SqlDocumentsRepository}</documentRepository>
          <loggingService>${LoggingService}</loggingService>
          <providerRepository>${SqlProvidersRepository}</providerRepository>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="DocumentsAdminService" service="RISARC.Documents.Service.IDocumentsAdminService, RISARC.Documents" type="RISARC.Documents.Implementation.Service.DocumentsAdminService, RISARC.Documents.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <filesService>${FilesService}</filesService>
          <documentRepository>${SqlDocumentsRepository}</documentRepository>
          <loggingService>${LoggingService}</loggingService>
          <providerRepository>${SqlProvidersRepository}</providerRepository>
          <risarcEmailService>${RISARCEmailService}</risarcEmailService>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="DocumentRetrievalService" service="RISARC.Documents.Service.IDocumentsRetrievalService, RISARC.Documents" type="RISARC.Documents.Implementation.Service.DocumentsRetrievalService, RISARC.Documents.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <documentRepository>${SqlDocumentsRepository}</documentRepository>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="FilesService" service="RISARC.Files.Service.IFilesService, RISARC.Files" type="RISARC.Files.Service.FilesService, RISARC.Files">
        <parameters>
          <fileInfoRepository>${SqlFileInfoRepository}</fileInfoRepository>
        </parameters>
      </component>
      <!--<component id="SqlMemRepository" service="RISARC.Files.Repository.IFileInfoRepository, RISARC.Files" type="RISARC.Files.Repository.SqlServer.FileInfoRepository, RISARC.Files" />-->
      <component id="PaymentService" service="RISARC.Payment.Service.IPaymentService, RISARC.Payment" type="RISARC.Payment.Implementation.Service.PaymentService, RISARC.Payment.Implementation">
        <parameters>
          <authorizeNetService>${TestAuthorizeNetService}</authorizeNetService>
        </parameters>
      </component>
      <component id="TestAuthorizeNetService" service="SpiegelDg.ApiProxies.Service.IAuthorizeNetService, SpiegelDg.ApiProxies" type="SpiegelDg.ApiProxies.Service.AuthorizeNetService, SpiegelDg.ApiProxies">
        <parameters>
          <isTest>True</isTest>
          <merchantLogin>5m7cmanV9SJ</merchantLogin>
          <merchantTransactionKey>5r9gt5rCRzM8N24w</merchantTransactionKey>
        </parameters>
      </component>
      <component id="TokenRepository" service="SpiegelDg.Security.Implementation.Repository.ITokenRepository, SpiegelDg.Security" type="SpiegelDg.Security.Implementation.Repository.SqlTokenRepository, SpiegelDg.Security">
        <parameters>
          <connectionStringKey>ApplicationServices</connectionStringKey>
          <tokenExpirationInMinutes>15</tokenExpirationInMinutes>
          <!--this sets token expiration-->
        </parameters>
      </component>
      <component id="PaymentRepository" service="RISARC.Payment.Implementation.Repository.IPaymentRepository,  RISARC.Payment.Implementation" type="RISARC.Payment.Implementation.Repository.SqlServer.PaymentRepository,  RISARC.Payment.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLE</connectionStringKey>
        </parameters>
      </component>
      <component id="SqlDocumentsRepository" service="RISARC.Documents.Implementation.Repository.IDocumentsRepository, RISARC.Documents.Implementation" type="RISARC.Documents.Implementation.Repository.SqlServer.DocumentsRepository, RISARC.Documents.Implementation">
      </component>
      <component id="SqlDocumentRetreivalRepository" service="RISARC.Documents.Implementation.Repository.IDocumentsRetrievalRepository, RISARC.Documents.Implementation" type="RISARC.Documents.Implementation.Repository.SqlServer.DocumentsRetrievalRepository, RISARC.Documents.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLE</connectionStringKey>
        </parameters>
      </component>
      <component id="LoggingService" service="RISARC.Logging.Service.ILoggingService, RISARC.Logging" type="RISARC.Logging.Implementation.Service.LoggingService, RISARC.Logging" lifestyle="PerWebRequest">
        <parameters>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="EmailService" service="SpiegelDg.Email.Service.IEmailService, SpiegelDg.Email" type="SpiegelDg.Email.Implementation.Service.EmailService, SpiegelDg.Email" />
      <component id="EmailTemplateRepository" service="RISARC.Email.Implementation.Repository.IEmailTemplateRepository, RISARC.Email.Implementation" type="RISARC.Email.Implementation.Repository.FileSystem.EmailTemplateRepository, RISARC.Email.Implementation" />
      <component id="SqlFileInfoRepository" service="RISARC.Files.Repository.IFileInfoRepository, RISARC.Files" type="RISARC.Files.Repository.SqlServer.FileInfoRepository, RISARC.Files" />
      <component id="SqlProvidersRepository" service="RISARC.Setup.Implementation.Repository.IProviderRepository, RISARC.Setup.Implementation" type="RISARC.Setup.Implementation.Repository.SqlServer.ProviderRepository, RISARC.Setup.Implementation" />
      <component id="SqlDocumentTypesRepository" service="RISARC.Setup.Implementation.Repository.IDocumentTypesRepository, RISARC.Setup.Implementation" type="RISARC.Setup.Implementation.Repository.SqlServer.DocumentTypesRepository, RISARC.Setup.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLE</connectionStringKey>
        </parameters>
      </component>
      <component id="SqlSetupDataRepository" service="RISARC.Setup.Implementation.Repository.ISetupDataRepository, RISARC.Setup.Implementation" type="RISARC.Setup.Implementation.Repository.SqlServer.SetupDataRepository, RISARC.Setup.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLESetup</connectionStringKey>
        </parameters>
      </component>
      <component id="SqlLoggingRepository" service="RISARC.Logging.Implementation.ILoggingRepository, RISARC.Logging" type="RISARC.Logging.Implementation.SqlServer.LoggingRepository, RISARC.Logging">
        <parameters>
          <connectionStringKey>Logging</connectionStringKey>
        </parameters>
      </component>
      <!--fake repositories-->
      <!--<component id="SqlFileInfoRepository"
                 service="RISARC.Files.Repository.IFileInfoRepository, RISARC.Files"
                 type="RISARC.Documents.Implementation.Repository.Fake.SqlFileInfoRepository, RISARC.Documents.Implementation">
      </component>-->
      <!--<component id="FakeDocumentsRepository" service="RISARC.Documents.Implementation.Repository.IDocumentsRepository, RISARC.Documents.Implementation" type="RISARC.Documents.Implementation.Repository.Fake.FakeDocumentsRepository, RISARC.Documents.Implementation">
      </component>-->
    </components>
  </castle>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="ScriptModule" />
      <remove name="UrlRoutingModule" />
      <add name="ScriptModule" preCondition="managedHandler" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="UrlRoutingModule" type="System.Web.Routing.UrlRoutingModule, System.Web.Routing, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="PerRequestLifestyle" type="Castle.MicroKernel.Lifestyle.PerWebRequestLifestyleModule, Castle.MicroKernel" />
    </modules>
    <handlers>
      <remove name="WebServiceHandlerFactory-Integrated" />
      <remove name="ScriptHandlerFactory" />
      <remove name="ScriptHandlerFactoryAppServices" />
      <remove name="ScriptResource" />
      <remove name="MvcHttpHandler" />
      <remove name="UrlRoutingHandler" />
      <add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptHandlerFactoryAppServices" verb="*" path="*_AppService.axd" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ScriptResource" preCondition="integratedMode" verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="UrlRoutingHandler" preCondition="integratedMode" verb="*" path="UrlRouting.axd" type="System.Web.HttpForbiddenHandler, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </handlers>
  </system.webServer>
</configuration>