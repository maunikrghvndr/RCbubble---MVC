<?xml version="1.0" encoding="utf-8"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
  <configSections>
    <section name="securityConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Configuration.SecuritySettings, Microsoft.Practices.EnterpriseLibrary.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="securityCryptographyConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.Configuration.CryptographySettings, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false" />
    <sectionGroup name="telerik">
      <section name="webAssets" type="Telerik.Web.Mvc.Configuration.WebAssetConfigurationSection, Telerik.Web.Mvc" requirePermission="false" />
    </sectionGroup>
    <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" requirePermission="false" />
    <sectionGroup name="devExpress">
      <section name="themes" type="DevExpress.Web.ASPxClasses.ThemesConfigurationSection, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="compression" type="DevExpress.Web.ASPxClasses.CompressionConfigurationSection, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="settings" type="DevExpress.Web.ASPxClasses.SettingsConfigurationSection, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="errors" type="DevExpress.Web.ASPxClasses.ErrorsConfigurationSection, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
    </sectionGroup>
    <section name="ImageGear.Web.DataProviders.ImageProvider" type="ImageGear.Web.DataProviders.ImageDataProviderConfiguration,ImageGear21.Web.Services" />
    <sectionGroup name="elmah">
      <section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah" />
      <section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah" />
      <section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah" />
      <section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah" />
    </sectionGroup>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>
  <elmah>
    <security allowRemoteAccess="yes" />
    <errorLog type="Elmah.SqlErrorLog, Elmah" connectionStringName="Logging" />
    <errorFilter>
      <test>
        <!-- do not log favicon.ico 404's -->
        <and>
          <equal binding="HttpStatusCode" value="404" type="Int32" />
          <regex binding="Context.Request.ServerVariables['URL']" pattern="/favicon\.ico(\z|\?)" />
        </and>
      </test>
    </errorFilter>
  </elmah>
  <securityConfiguration defaultAuthorizationInstance="" defaultSecurityCacheInstance="">
    <securityCacheProviders>
      <add cacheManagerInstanceName="Identity Cache Manager" defaultSlidingSessionExpirationInMinutes="15" defaultAbsoluteSessionExpirationInMinutes="60" type="Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore.CachingStoreProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cache.CachingStore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Identity Caching Store Provider" />
    </securityCacheProviders>
  </securityConfiguration>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add fileName="d:\error\error.log" footer="----------------------------------------" formatter="" header="----------------------------------------" rollFileExistsBehavior="Overwrite" rollInterval="None" rollSizeKB="0" timeStampPattern="yyyy-MM-dd" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Error Rolling Flat File Trace Listener" />
      <add fileName="d:\error\rolling.log" footer="----------------------------------------" formatter="Text Formatter" header="----------------------------------------" rollFileExistsBehavior="Overwrite" rollInterval="None" rollSizeKB="0" timeStampPattern="yyyy-MM-dd" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Rolling Flat File Trace Listener" />
    </listeners>
    <formatters>
      <add template="Timestamp: {timestamp} Message: {message} Category: {category} Priority: {priority} EventId: {eventid} Severity: {severity} Title:{title} Machine: {machine} Application Domain: {appDomain} Process Id: {processId} Process Name: {processName} Win32 Thread Id: {win32ThreadId} Thread Name: {threadName} Extended Properties: {dictionary({key} - {value} )}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="Error">
        <listeners>
          <add name="Error Rolling Flat File Trace Listener" />
        </listeners>
      </add>
      <add switchValue="All" name="Security">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="Rolling Flat File Trace Listener" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Error Rolling Flat File Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Controller Level Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="Exception" />
        </exceptionTypes>
      </add>
      <add name="Global Policy">
        <exceptionTypes>
          <add type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow" name="Exception">
            <exceptionHandlers>
              <add logCategory="Error" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Logging Handler" />
            </exceptionHandlers>
          </add>
          <add type="SpiegelDg.Common.Validation.InvalidActionException, SpiegelDg.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" postHandlingAction="None" name="InvalidActionException">
            <exceptionHandlers>
              <add logCategory="Error" eventId="100" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Logging Handler" />
            </exceptionHandlers>
          </add>
          <add type="System.Security.SecurityException, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None" name="SecurityException">
            <exceptionHandlers>
              <add logCategory="Security" eventId="100" severity="Critical" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" priority="0" useDefaultLogger="false" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Logging Handler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <dataConfiguration />
  <connectionStrings>
    <add name="ApplicationServices" connectionString="Data Source=RISARC-DB-Srv-W;Initial Catalog=RMSeBUBBLEMembership_Test;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="Logging" connectionString="Data Source=RISARC-DB-Srv-W;Initial Catalog=RMSeBUBBLELogging_Test;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="RMSeBUBBLE" connectionString="Data Source=RISARC-DB-Srv-W;Initial Catalog=RMSeBUBBLE2_TEST;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="RMSeBUBBLESetup" connectionString="Data Source=RISARC-DB-Srv-W;Initial Catalog=RMSeBUBBLE2_TEST;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="TransactionLOGConnectionString" connectionString="Data Source=RISARC-DB-Srv-W;Initial Catalog=RMSeBUBBLE_TransactionLOG;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="ConnectionString" providerName="System.Data.SqlClient" connectionString="Data Source=RISARC-DB-Srv-W;Integrated Security=False;Initial Catalog=ACO;User ID=sa;Password=cybage@123;Connect Timeout=15;Encrypt=False;TrustServerCertificate=False" />
  </connectionStrings>
  <!--<connectionStrings>
    <add name="ApplicationServices" connectionString="Data Source=risarc-dev\sql2k8r2;Initial Catalog=RMSeBUBBLEMembership_Test;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="Logging" connectionString="Data Source=risarc-dev\sql2k8r2;Initial Catalog=RMSeBUBBLELogging_Test;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="RMSeBUBBLE" connectionString="Data Source=risarc-dev\sql2k8r2;Initial Catalog=RMSeBUBBLE2_TEST;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="RMSeBUBBLESetup" connectionString="Data Source=risarc-dev\sql2k8r2;Initial Catalog=RMSeBUBBLE2_TEST;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
    <add name="TransactionLOGConnectionString" connectionString="Data Source=risarc-dev\sql2k8r2;Initial Catalog=RMSeBUBBLE_TransactionLOG;Persist Security Info=True;User ID=sa;Password=cybage@123" providerName="System.Data.SqlClient" />
  </connectionStrings>-->
  <securityCryptographyConfiguration>
    <hashProviders>
      <add algorithmType="System.Security.Cryptography.SHA256Managed, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" saltEnabled="true" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.HashAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="SHA256Managed" />
    </hashProviders>
    <symmetricCryptoProviders>
      <add algorithmType="System.Security.Cryptography.RijndaelManaged, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" protectedKeyFilename="C:\RISARC - ORGINAL- UPLOADER-3-28-13\RISARC\Applications\RISARC.Web.EBubble\Keys\DataParams.key" protectedKeyProtectionScope="CurrentUser" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="DataEncryptProvider" />
      <add algorithmType="System.Security.Cryptography.RijndaelManaged, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" protectedKeyFilename="C:\RISARC - ORGINAL- UPLOADER-3-28-13\RISARC\Applications\RISARC.Web.EBubble\Keys\NewKeys\ExternalParams.key" protectedKeyProtectionScope="LocalMachine" type="Microsoft.Practices.EnterpriseLibrary.Security.Cryptography.SymmetricAlgorithmProvider, Microsoft.Practices.EnterpriseLibrary.Security.Cryptography, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="FrontEndEncryptProvider" />
    </symmetricCryptoProviders>
  </securityCryptographyConfiguration>
  <cachingConfiguration defaultCacheManager="Identity Cache Manager">
    <cacheManagers>
      <add expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="10000" numberToRemoveWhenScavenging="10" backingStoreName="Null Storage" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Identity Cache Manager" />
    </cacheManagers>
    <backingStores>
      <add encryptionProviderName="" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" name="Null Storage" />
    </backingStores>
  </cachingConfiguration>
  <appSettings>
    <!--Provider PREM  -->
    <add key="recipientProviderId" value="485" />
    <add key="recipientDocType" value="11,57,58,59" />
    <!--End Provider PREM  -->
    <add key="MedicalDocumentsBaseDirectory" value="\\risarc-tfs\RISARC-Share\Development\SpiegelDg\Source\RISARC\Applications\RISARC.ElectronicMedicalRecord\Files\MedicalDocuments\" />
    <add key="ComplianceDocumentsBaseDirectory" value="\\risarc-tfs\RISARC-Share\Development\SpiegelDg\Source\RISARC\Applications\RISARC.ElectronicMedicalRecord\Files\ComplianceDocuments\" />
    <add key="FilledOutComlianceDocumentsBaseDirectory" value="\\risarc-tfs\RISARC-Share\Development\SpiegelDg\Source\RISARC\Applications\RISARC.ElectronicMedicalRecord\Files\FilledOutComlianceDocuments\" />
    <add key="PQRSFilesDirectory" value="\\risarc-tfs\RISARC-Share\Development\SpiegelDg\Source\RISARC\Applications\RISARC.ElectronicMedicalRecord\Files\PQRS\" />
    <add key="DocumentViewerDecryptDirecotry" value="Trash\{0}\" />
    <add key="MaxAttemptedVerifications" value="3" />
    <add key="EmailTemplatePath" value="D:\Emails\" />
    <add key="EmailFromAddress" value="rmsebubble@risarconline.com" />
    <add key="SiteBaseDirectory" value="http://localhost/RISARC.Emr.Application/" />
    <add key="DocumentPageSize" value="15" />
    <add key="UseHardCodedEncryption" value="True" />
    <add key="RejectedFileExtensions" value="arc,arj,as,b64,btoa,bz,cpt,gz,hqx,iso,lha,lzh,mim,mme,pak,pf,rar,sea,sit,sitx,tar,gz,tbz,tbz2,tgz,uu,uue,z,zip,zoo" />
    <!--will set downloads to expire in 7 days-->
    <!--<add key="DocumentDownloadExpirationInDays" value="90" />-->
    <!--minimum length for comments (also for purpose of request and purpose of document) when they are required-->
    <add key="MinimumCommentsLength" value="25" />
    <!--cost related-->
    <!--The lowest minimum document price that can be set for a provider-->
    <add key="LowestMinimumDocumentPrice" value="7.00" />
    <add key="ClientValidationEnabled" value="false" />
    <add key="UnobtrusiveJavaScriptEnabled" value="false" />
    <add key="EnableFileEncryption" value="true" />
    <add key="EnableTCNFileEncryption" value="true" />
    <add key="EnablePrivateKeyEncryption" value="true" />
    <add key="VisualStudioDesignTime:Enabled" value="true" />
    <!-- Settings specific to Accusoft-->
    <add key="maxThreadsPerControl" value="4" />
    <add key="igBinaries" value="~\Bin" />
    <add key="igComponent" value="~\bin\ImageGear21.Web.ImageDataProcessor.dll" />
    <add key="igSolutionName" value="Accusoft" />
    <add key="igSolutionKey" value="" />
    <add key="igLicenseKey" value="" />
    <add key="igDisableFormats" value="dcrawHeaderless" />
    <!-- End Accusoft settings-->
    <!-- Time Tracking interval in seconds-->
    <add key="TimeTrackingInterval" value="15" />
  </appSettings>
  <system.web>
    <!--<httpRuntime maxRequestLength="25000" executionTimeout="600"/>-->
    <httpRuntime maxRequestLength="1048576" executionTimeout="3600" requestValidationMode="2.0" />
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
    -->
    <!--<trust level="Medium" />-->
    <compilation debug="true" targetFramework="4.0">
      <!--<pages>
<namespaces>
<add namespace="System.Web.Optimization" />
</namespaces>
<controls>
<add assembly="Microsoft.AspNet.Web.Optimization.WebForms" namespace="Microsoft.AspNet.Web.Optimization.WebForms" tagPrefix="webopt" />
</controls>
</pages>-->
      <assemblies>
        <add assembly="System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Speech, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.WebPages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="System.Web.Helpers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
        <add assembly="DevExpress.Data.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.ASPxHtmlEditor.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.ASPxSpellChecker.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.ASPxTreeList.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.ASPxThemes.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.ASPxPivotGrid.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Utils.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Office.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.RichEdit.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.SpellChecker.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Charts.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraCharts.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraGauges.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraGauges.v14.1.Presets, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.ASPxGauges.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraCharts.v14.1.Web, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Printing.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraReports.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraReports.v14.1.Web, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraPivotGrid.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.PivotGrid.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.XtraScheduler.v14.1.Core, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.ASPxScheduler.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.Mvc.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Docs.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="17" slidingExpiration="true" />
    </authentication>
    <membership defaultProvider="AspNetSqlMembershipProvider">
      <providers>
        <clear />
        <add connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="8" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="([A-Za-z0-9]{0,}[A-Z]{1,1}[A-Za-z0-9]{0,}[0-9]{1,1}[A-Za-z0-9]{0,})|([A-Za-z0-9]{0,}[0-9]{1,1}[A-Za-z0-9]{0,}[A-Z]{1,1}[A-Za-z0-9]{0,})" applicationName="RISARC.Web.EBubble" name="RMSeBubbleMembershipProvider" type="RISARC.Membership.Implementation.Repository.SqlServer.RMSeBubbleMembershipProvider, RISARC.Membership.Implementation" />
        <add connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="true" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="RISARC.Web.EBubble" name="ForgotPasswordProvider" type="RISARC.Membership.Implementation.Repository.SqlServer.RMSeBubbleMembershipProvider, RISARC.Membership.Implementation" />
        <!--this left here to allow asp.net configuration manager:-->
        <add connectionStringName="ApplicationServices" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" passwordFormat="Hashed" maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" applicationName="RISARC.Web.EBubble" name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </providers>
    </membership>
    <profile>
      <providers>
        <clear />
        <add name="AspNetSqlProfileProvider" type="System.Web.Profile.SqlProfileProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" connectionStringName="ApplicationServices" applicationName="RISARC.Web.EBubble" />
      </providers>
    </profile>
    <roleManager enabled="true">
      <providers>
        <clear />
        <add connectionStringName="ApplicationServices" applicationName="RISARC.Web.EBubble" name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <add applicationName="RISARC.Web.EBubble" name="AspNetWindowsTokenRoleProvider" type="System.Web.Security.WindowsTokenRoleProvider, System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      </providers>
    </roleManager>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
    -->
    <customErrors mode="Off" defaultRedirect="~/Error/UnexpectedError">
      <error statusCode="404" redirect="~/Error/NotFound" />
      <error statusCode="500" redirect="~/Error/SecurityError" />
    </customErrors>
    <pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID" validateRequest="false">
      <controls>
        <add tagPrefix="telerik" namespace="Telerik.Web.UI" assembly="Telerik.Web.UI" />
      </controls>
      <namespaces>
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Linq" />
        <add namespace="System.Collections.Generic" />
        <add namespace="Microsoft.Web.Mvc" />
        <add namespace="RISARC.Emr.Web.DataTypes" />
        <add namespace="SpiegelDg.Common.Web.Extensions" />
        <add namespace="RISARC.Emr.Web.Extensions" />
        <add namespace="SpiegelDg.Common.Web.Model" />
        <add namespace="RISARC.Web.EBubble.Models.Extensions" />
        <add namespace="Telerik.Web.Mvc.UI" />
        <add namespace="Telerik.Web.Mvc.Examples" />
        <add namespace="DevExpress.Utils" />
        <add namespace="DevExpress.Web.ASPxClasses" />
        <add namespace="DevExpress.Web.ASPxGridView" />
        <add namespace="DevExpress.Web.ASPxGridView.Export" />
        <add namespace="DevExpress.Web.ASPxEditors" />
        <add namespace="DevExpress.Web.ASPxCallbackPanel" />
        <add namespace="DevExpress.Web.ASPxDataView" />
        <add namespace="DevExpress.Web.ASPxDocking" />
        <add namespace="DevExpress.Web.ASPxMenu" />
        <add namespace="DevExpress.Web.ASPxNavBar" />
        <add namespace="DevExpress.Web.ASPxPopupControl" />
        <add namespace="DevExpress.Web.ASPxRoundPanel" />
        <add namespace="DevExpress.Web.ASPxSplitter" />
        <add namespace="DevExpress.Web.ASPxTabControl" />
        <add namespace="DevExpress.Web.ASPxTreeView" />
        <add namespace="DevExpress.Web.ASPxFileManager" />
        <add namespace="DevExpress.Web.ASPxImageSlider" />
        <add namespace="DevExpress.Web.ASPxUploadControl" />
        <add namespace="DevExpress.Web.ASPxHtmlEditor" />
        <add namespace="DevExpress.Web.ASPxSpellChecker" />
        <add namespace="DevExpress.Web.ASPxTreeList" />
        <add namespace="DevExpress.Web.ASPxTreeList.Export" />
        <add namespace="DevExpress.XtraCharts" />
        <add namespace="DevExpress.XtraCharts.Web" />
        <add namespace="DevExpress.XtraReports" />
        <add namespace="DevExpress.XtraReports.UI" />
        <add namespace="DevExpress.XtraReports.Web" />
        <add namespace="DevExpress.XtraPivotGrid" />
        <add namespace="DevExpress.Data.PivotGrid" />
        <add namespace="DevExpress.Web.ASPxPivotGrid" />
        <add namespace="DevExpress.Web.ASPxPivotGrid.Export" />
        <add namespace="DevExpress.Web.Mvc" />
        <add namespace="DevExpress.Web.Mvc.UI" />
        <add namespace="DevExpress.XtraScheduler" />
        <add namespace="DevExpress.XtraScheduler.Native" />
        <add namespace="DevExpress.Web.ASPxScheduler" />
      </namespaces>
    </pages>
    <httpHandlers>
      <add path="Telerik.Web.UI.WebResource.axd" type="Telerik.Web.UI.WebResource" verb="*" validate="false" />
      <!--<add verb="*" path="Telerik.RadUploadProgressHandler.axd" type="Telerik.Web.UI.RadUploadProgressHandler, Telerik.Web.UI"/>-->
      <add path="Telerik.Web.UI.WebResource.axd" type="Telerik.Web.UI.WebResource" verb="*" validate="false" />
      <!--<add verb="*" path="Telerik.RadUploadProgressHandler.axd" type="Telerik.Web.UI.RadUploadProgressHandler, Telerik.Web.UI"/>-->
      <add path="Telerik.RadUploadProgressHandler.ashx" type="Telerik.Web.UI.RadUploadProgressHandler" verb="*" validate="false" />
      <add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add path="ChartImage.axd" type="Telerik.Web.UI.ChartHttpHandler" verb="*" validate="false" />
      <add path="Telerik.Web.UI.SpellCheckHandler.axd" type="Telerik.Web.UI.SpellCheckHandler" verb="*" validate="false" />
      <add path="Telerik.Web.UI.DialogHandler.aspx" type="Telerik.Web.UI.DialogHandler" verb="*" validate="false" />
      <add verb="GET,HEAD" path="asset.axd" validate="false" type="Telerik.Web.Mvc.WebAssetHttpHandler, Telerik.Web.Mvc" />
      <add type="DevExpress.Web.ASPxUploadControl.ASPxUploadProgressHttpHandler, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" verb="GET,POST" path="ASPxUploadProgressHandlerPage.ashx" validate="false" />
      <add type="DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" verb="GET,POST" path="DX.ashx" validate="false" />
      <add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
    </httpHandlers>
    <httpModules>
      <add name="RadUploadModule" type="Telerik.Web.UI.RadUploadHttpModule" />
      <add name="PerRequestLifestyle" type="Castle.MicroKernel.Lifestyle.PerWebRequestLifestyleModule, Castle.MicroKernel" />
      <add type="DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" name="ASPxHttpHandlerModule" />
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
    </httpModules>
    <globalization culture="" uiCulture="" />
    <!--Added by Guru-->
    <machineKey decryptionKey="99CB1693B8763366E7DC1383CB902951A7AA06026C1BF28C" validation="SHA1" validationKey="57D30297E35E6B601B13D03401D9CE88F7606AEF0D2A7B14228AF79A3C56ADF109956FD76D1A6E255BD31696A76C9652723C3A7BC6BD6E755CDE8E0BF3085E71" />
  </system.web>
  <system.net>
    <mailSettings>
      <!--To be uncommented for production environment and test environment-->
      <!--<smtp from="rmsebubble@risarconline.com">
        <network host="smtp.gmail.com" password="test12345678" port="587" userName="risarcsendertest@gmail.com" />
      </smtp>-->
      <!--To be removed for production environment and test environment-->
      <smtp deliveryMethod="SpecifiedPickupDirectory">
        <network host="ignored" />
        <specifiedPickupDirectory pickupDirectoryLocation="d:\email_rmsebubble" />
      </smtp>
    </mailSettings>
  </system.net>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
  <castle>
    <components>
      <!--services-->
      <component id="RMSeBubbleMempershipService" service="RISARC.Membership.Service.IRMSeBubbleMempershipService, RISARC.Membership" type="RISARC.Membership.Implementation.Service.RMSeBubbleMempershipService, RISARC.Membership.Implementation" lifestyle="PerWebRequest" />
      <component id="MembershipAdministrationService" service="RISARC.Membership.Service.IMembershipAdministrationService, RISARC.Membership" type="RISARC.Membership.Implementation.Service.MembershipAdministrationService, RISARC.Membership.Implementation" lifestyle="PerWebRequest" />
      <!--<component id="MempershipInvitationService" service="RISARC.Membership.Service.IMembershipInvitationService, RISARC.Membership" type="RISARC.Membership.Implementation.Service.MembershipInvitationService, RISARC.Membership.Implementation">
      </component>-->
      <component id="RISARCEmailService" service="RISARC.Email.Service.IRISARCEmailService, RISARC.Email" type="RISARC.Email.Implementation.Service.RISARCEmailService, RISARC.Email.Implementation">
        <parameters />
      </component>
      <!--Authentication Related-->
      <component id="TokenBasedUserGrabber" service="SpiegelDg.Common.Service.IUserGrabber, SpiegelDg.Common" type="SpiegelDg.Security.Service.TokenBasedUserGrabber, SpiegelDg.Security" lifestyle="PerWebRequest">
        <parameters>
          <tokenRepository>${TokenRepository}</tokenRepository>
          <tokenGrabbingService>${TokenService}</tokenGrabbingService>
        </parameters>
      </component>
      <component id="FormsAuthenticationService" service="SpiegelDg.Security.Service.IFormsAuthenticationService, SpiegelDg.Security" type="SpiegelDg.Security.Service.TokenBasedAuthorizationService, SpiegelDg.Security" lifestyle="PerWebRequest">
        <parameters>
          <tokenRepository>${TokenRepository}</tokenRepository>
          <tokenGrabbingService>${TokenService}</tokenGrabbingService>
        </parameters>
      </component>
      <component id="TokenService" service="SpiegelDg.Security.Service.ITokenGrabbingService, SpiegelDg.Security" type="SpiegelDg.Security.Service.CookiesBasedTokenService, SpiegelDg.Security" lifestyle="PerWebRequest" />
      <!--Services-->
      <component id="DocumentAccessAuditor" service="RISARC.Documents.Service.IDocumentAccessAuditor, RISARC.Documents" type="RISARC.Documents.Implementation.Service.DocumentAccessAuditor, RISARC.Documents.Implementation" />
      <component id="UserDocumentsService" service="RISARC.Documents.Service.IUserDocumentsService, RISARC.Documents" type="RISARC.Documents.Implementation.Service.UserDocumentsService, RISARC.Documents.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <filesService>${FilesService}</filesService>
          <documentRepository>${SqlDocumentsRepository}</documentRepository>
          <loggingService>${LoggingService}</loggingService>
          <providerRepository>${SqlProvidersRepository}</providerRepository>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="DocumentsAdminService" service="RISARC.Documents.Service.IDocumentsAdminService, RISARC.Documents" type="RISARC.Documents.Implementation.Service.DocumentsAdminService, RISARC.Documents.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <filesService>${FilesService}</filesService>
          <documentRepository>${SqlDocumentsRepository}</documentRepository>
          <loggingService>${LoggingService}</loggingService>
          <providerRepository>${SqlProvidersRepository}</providerRepository>
          <risarcEmailService>${RISARCEmailService}</risarcEmailService>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="DocumentRetrievalService" service="RISARC.Documents.Service.IDocumentsRetrievalService, RISARC.Documents" type="RISARC.Documents.Implementation.Service.DocumentsRetrievalService, RISARC.Documents.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <documentRepository>${SqlDocumentsRepository}</documentRepository>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="FilesService" service="RISARC.Files.Service.IFilesService, RISARC.Files" type="RISARC.Files.Service.FilesService, RISARC.Files">
        <parameters>
          <fileInfoRepository>${SqlFileInfoRepository}</fileInfoRepository>
        </parameters>
      </component>
      <component id="PQRSService" service="RISARC.ACO.Service.IPQRSService, RISARC.ACO" type="RISARC.ACO.Service.PQRSService, RISARC.ACO">
        <parameters>
          <fileInfoRepository>${SqlPQRSRepository}</fileInfoRepository>
        </parameters>
      </component>
      <component id="PQRSDocumentsAdminService" service="RISARC.ACO.Service.IPQRSDocumentsAdminService, RISARC.ACO" type="RISARC.ACO.Service.PQRSDocumentsAdminService, RISARC.ACO">
        <parameters>
          <fileInfoRepository>${SqlFileInfoRepository}</fileInfoRepository>
        </parameters>
      </component>
      <!--<component id="SqlMemRepository" service="RISARC.Files.Repository.IFileInfoRepository, RISARC.Files" type="RISARC.Files.Repository.SqlServer.FileInfoRepository, RISARC.Files" />-->
      <component id="PaymentService" service="RISARC.Payment.Service.IPaymentService, RISARC.Payment" type="RISARC.Payment.Implementation.Service.PaymentService, RISARC.Payment.Implementation">
        <parameters>
          <authorizeNetService>${TestAuthorizeNetService}</authorizeNetService>
        </parameters>
      </component>
      <component id="AuthorizeNetService" service="SpiegelDg.ApiProxies.Service.IAuthorizeNetService, SpiegelDg.ApiProxies" type="SpiegelDg.ApiProxies.Service.AuthorizeNetService, SpiegelDg.ApiProxies">
        <parameters>
          <isTest>False</isTest>
          <merchantLogin>5m7cmanV9SJ</merchantLogin>
          <merchantTransactionKey>5r9gt5rCRzM8N24w</merchantTransactionKey>
        </parameters>
      </component>
      <component id="TestAuthorizeNetService" service="SpiegelDg.ApiProxies.Service.IAuthorizeNetService, SpiegelDg.ApiProxies" type="SpiegelDg.ApiProxies.Service.AuthorizeNetService, SpiegelDg.ApiProxies">
        <parameters>
          <isTest>True</isTest>
          <merchantLogin>5m7cmanV9SJ</merchantLogin>
          <merchantTransactionKey>5r9gt5rCRzM8N24w</merchantTransactionKey>
        </parameters>
      </component>
      <component id="TokenRepository" service="SpiegelDg.Security.Implementation.Repository.ITokenRepository, SpiegelDg.Security" type="SpiegelDg.Security.Implementation.Repository.SqlTokenRepository, SpiegelDg.Security">
        <parameters>
          <connectionStringKey>ApplicationServices</connectionStringKey>
          <tokenExpirationInMinutes>15</tokenExpirationInMinutes>
          <!--this sets token expiration-->
        </parameters>
      </component>
      <component id="PaymentRepository" service="RISARC.Payment.Implementation.Repository.IPaymentRepository,  RISARC.Payment.Implementation" type="RISARC.Payment.Implementation.Repository.SqlServer.PaymentRepository,  RISARC.Payment.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLE</connectionStringKey>
        </parameters>
      </component>
      <component id="SqlDocumentsRepository" service="RISARC.Documents.Implementation.Repository.IDocumentsRepository, RISARC.Documents.Implementation" type="RISARC.Documents.Implementation.Repository.SqlServer.DocumentsRepository, RISARC.Documents.Implementation" />
      <component id="SqlDocumentRetreivalRepository" service="RISARC.Documents.Implementation.Repository.IDocumentsRetrievalRepository, RISARC.Documents.Implementation" type="RISARC.Documents.Implementation.Repository.SqlServer.DocumentsRetrievalRepository, RISARC.Documents.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLE</connectionStringKey>
        </parameters>
      </component>
      <component id="LoggingService" service="RISARC.Logging.Service.ILoggingService, RISARC.Logging" type="RISARC.Logging.Implementation.Service.LoggingService, RISARC.Logging" lifestyle="PerWebRequest">
        <parameters>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
        </parameters>
      </component>
      <component id="EmailService" service="SpiegelDg.Email.Service.IEmailService, SpiegelDg.Email" type="SpiegelDg.Email.Implementation.Service.EmailService, SpiegelDg.Email" />
      <component id="EmailTemplateRepository" service="RISARC.Email.Implementation.Repository.IEmailTemplateRepository, RISARC.Email.Implementation" type="RISARC.Email.Implementation.Repository.FileSystem.EmailTemplateRepository, RISARC.Email.Implementation" />
      <component id="SqlFileInfoRepository" service="RISARC.Files.Repository.IFileInfoRepository, RISARC.Files" type="RISARC.Files.Repository.SqlServer.FileInfoRepository, RISARC.Files" />
      <component id="SqlPQRSRepository" service="RISARC.ACO.Repository.IPQRSRepository, RISARC.ACO" type="RISARC.ACO.Repository.SqlServer.PQRSRepository, RISARC.ACO" />
      <component id="SqlProvidersRepository" service="RISARC.Setup.Implementation.Repository.IProviderRepository, RISARC.Setup.Implementation" type="RISARC.Setup.Implementation.Repository.SqlServer.ProviderRepository, RISARC.Setup.Implementation" />
      <component id="SqlDocumentTypesRepository" service="RISARC.Setup.Implementation.Repository.IDocumentTypesRepository, RISARC.Setup.Implementation" type="RISARC.Setup.Implementation.Repository.SqlServer.DocumentTypesRepository, RISARC.Setup.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLE</connectionStringKey>
        </parameters>
      </component>
      <component id="SqlSetupDataRepository" service="RISARC.Setup.Implementation.Repository.ISetupDataRepository, RISARC.Setup.Implementation" type="RISARC.Setup.Implementation.Repository.SqlServer.SetupDataRepository, RISARC.Setup.Implementation">
        <parameters>
          <connectionStringKey>RMSeBUBBLESetup</connectionStringKey>
        </parameters>
      </component>
      <component id="SqlLoggingRepository" service="RISARC.Logging.Implementation.ILoggingRepository, RISARC.Logging" type="RISARC.Logging.Implementation.SqlServer.LoggingRepository, RISARC.Logging">
        <parameters>
          <connectionStringKey>Logging</connectionStringKey>
        </parameters>
      </component>
      <!--fake repositories-->
      <!--<component id="SqlFileInfoRepository"
                 service="RISARC.Files.Repository.IFileInfoRepository, RISARC.Files"
                 type="RISARC.Documents.Implementation.Repository.Fake.SqlFileInfoRepository, RISARC.Documents.Implementation">
      </component>-->
      <!--<component id="FakeDocumentsRepository" service="RISARC.Documents.Implementation.Repository.IDocumentsRepository, RISARC.Documents.Implementation" type="RISARC.Documents.Implementation.Repository.Fake.FakeDocumentsRepository, RISARC.Documents.Implementation">
      </component>-->
      <!--Added By Dnyaneshwar-->
      <component id="FieldOfficerRepository" service="RISARC.eTAR.Implementation.Repository.IFieldOfficerRepository, RISARC.eTAR.Implementation" type="RISARC.eTAR.Implementation.Repository.SqlServer.FieldOfficerRepository, RISARC.eTAR.Implementation" lifestyle="PerWebRequest" />
      <component id="FieldOfficerService" service="RISARC.eTAR.Service.IFieldOfficerService, RISARC.eTAR" type="RISARC.eTAR.Implementation.Service.FieldOfficerService, RISARC.eTAR.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
          <fieldOfficerRepository>${FieldOfficerRepository}</fieldOfficerRepository>
        </parameters>
      </component>
      <component id="AccountDetailsRepository" service="RISARC.eTAR.Implementation.Repository.IAccountDetailsRepository, RISARC.eTAR.Implementation" type="RISARC.eTAR.Implementation.Repository.SqlServer.AccountDetailsRepository, RISARC.eTAR.Implementation" lifestyle="PerWebRequest" />
      <!--Added By Abdul-->
      <component id="MembershipSettingsRepository" service="RISARC.eTAR.Implementation.Repository.IMembershipSettingsRepository, RISARC.eTAR.Implementation" type="RISARC.eTAR.Implementation.Repository.SqlServer.MembershipSettingsRepository, RISARC.eTAR.Implementation" lifestyle="PerWebRequest" />
      <!--End Added-->
      <component id="AccountDetailsService" service="RISARC.eTAR.Service.IAccountDetailsService, RISARC.eTAR" type="RISARC.eTAR.Implementation.Service.AccountDetailsService, RISARC.eTAR.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
          <accountDetailsRepository>${AccountDetailsRepository}</accountDetailsRepository>
          <loggingService>${LoggingService}</loggingService>
          <membershipSettingsRepository>${MembershipSettingsRepository}</membershipSettingsRepository>
        </parameters>
      </component>
      <!--End Added-->
      <!--Added By Guru-->
      <component id="TimeTrackerRepository" service="RISARC.eTAR.Implementation.Repository.ITimeTrackerRepository, RISARC.eTAR.Implementation" type="RISARC.eTAR.Implementation.Repository.SqlServer.TimeTrackerRepository, RISARC.eTAR.Implementation" lifestyle="PerWebRequest" />
      <component id="TimeTrackerService" service="RISARC.eTAR.Service.ITimeTrackerService, RISARC.eTAR" type="RISARC.eTAR.Implementation.Service.TimeTrackerService, RISARC.eTAR.Implementation" lifestyle="PerWebRequest">
        <parameters>
          <membershipService>${RMSeBubbleMempershipService}</membershipService>
          <userGrabber>${TokenBasedUserGrabber}</userGrabber>
          <timeTrackerRepository>${TimeTrackerRepository}</timeTrackerRepository>
        </parameters>
      </component>
      <!--End Added-->
    </components>
  </castle>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" />
      <add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" />
      <add name="ErrorFilter" type="Elmah.ErrorFilterModule, Elmah" />
      <remove name="RadUploadModule" />
      <add name="RadUploadModule" type="Telerik.Web.UI.RadUploadHttpModule" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="PerRequestLifestyle" type="Castle.MicroKernel.Lifestyle.PerWebRequestLifestyleModule, Castle.MicroKernel" />
      <add type="DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" name="ASPxHttpHandlerModule" />
    </modules>
    <!--<handlers accessPolicy="Read, Write, Script" />
    <directoryBrowse enabled="false" />
    <defaultDocument>
      <files>
        <clear />
        <add value="AccountDetailsMaster.aspx" />
      </files>
    </defaultDocument>
    <httpErrors>
      <clear />
    </httpErrors>-->
    <handlers>
      <remove name="MvcHttpHandler" />
      <remove name="UrlRoutingHandler" />
      <remove name="ChartImage_axd" />
      <remove name="Telerik_Web_UI_SpellCheckHandler_axd" />
      <remove name="Telerik_Web_UI_DialogHandler_aspx" />
      <remove name="Telerik_RadUploadProgressHandler_ashx" />
      <remove name="Telerik_Web_UI_WebResource_axd" />
      <remove name="asset" />
      <add name="Telerik_RadUploadProgressHandler_ashx" path="Telerik.RadUploadProgressHandler.ashx" type="Telerik.Web.UI.RadUploadProgressHandler" verb="*" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="Telerik_Web_UI_WebResource_axd" path="Telerik.Web.UI.WebResource.axd" type="Telerik.Web.UI.WebResource" verb="*" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="Telerik_RadUploadProgressHandler_axd" path="Telerik.RadUploadProgressHandler.axd" verb="*" type="Telerik.Web.UI.Upload.RadUploadProgressHandler, Telerik.Web.UI" preCondition="integratedMode" />
      <add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />
      <add name="ChartImage_axd" path="ChartImage.axd" type="Telerik.Web.UI.ChartHttpHandler" verb="*" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="Telerik_Web_UI_SpellCheckHandler_axd" path="Telerik.Web.UI.SpellCheckHandler.axd" type="Telerik.Web.UI.SpellCheckHandler" verb="*" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="Telerik_Web_UI_DialogHandler_aspx" path="Telerik.Web.UI.DialogHandler.aspx" type="Telerik.Web.UI.DialogHandler" verb="*" preCondition="integratedMode,runtimeVersionv2.0" />
      <add name="asset" preCondition="integratedMode" verb="GET,HEAD" path="asset.axd" type="Telerik.Web.Mvc.WebAssetHttpHandler, Telerik.Web.Mvc" />
      <add type="DevExpress.Web.ASPxUploadControl.ASPxUploadProgressHttpHandler, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" verb="GET,POST" path="ASPxUploadProgressHandlerPage.ashx" name="ASPxUploadProgressHandler" preCondition="integratedMode" />
      <add type="DevExpress.Web.ASPxClasses.ASPxHttpHandlerModule, DevExpress.Web.v14.1, Version=14.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" verb="GET,POST" path="DX.ashx" name="ASPxHttpHandlerModule" preCondition="integratedMode" />
      <add name="Elmah" verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah" />
    </handlers>
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="1073741824" />
      </requestFiltering>
    </security>
    <!--Added By Dnyaneshwar to correct compatibility issue with intra-net-->
    <httpProtocol>
      <customHeaders>
        <clear />
        <add name="X-UA-Compatible" value="IE=edge" />
      </customHeaders>
    </httpProtocol>
    <!--End Added-->
  </system.webServer>
  <!--Enterprise library configuration-->
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Routing" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Abstractions" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <telerik>
    <webAssets useTelerikContentDeliveryNetwork="false" />
  </telerik>
  <system.serviceModel>
    <behaviors>
      <endpointBehaviors>
        <behavior name="RISARC.Web.EBubble.AJAXServiceAspNetAjaxBehavior">
          <enableWebScript />
        </behavior>
      </endpointBehaviors>
    </behaviors>
    <services>
      <service name="RISARC.Web.EBubble.AJAXService">
        <endpoint address="" behaviorConfiguration="RISARC.Web.EBubble.AJAXServiceAspNetAjaxBehavior" binding="webHttpBinding" contract="RISARC.Web.EBubble.AJAXService" />
      </service>
      <!--Added for Document Viewer-->
      <service name="ImageGear.Web.ImGearService">
        <!--<endpoint binding="webHttpBinding" contract="ImageGear.Web.IImGearService" bindingConfiguration="webBinding"/>-->
        <endpoint binding="webHttpBinding" contract="ImageGear.Web.IImGearService" />
      </service>
      <!--End Added-->
    </services>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
    <!--Added by Dnyaneshwar -> Enable it in Https envirnment-->
    <!--<bindings>
      <webHttpBinding>
        <binding name="webBinding">
          <security mode="Transport">
          </security>
        </binding>
      </webHttpBinding>
    </bindings>-->
    <!--end Added-->
  </system.serviceModel>
  <devExpress>
    <themes enableThemesAssembly="true" styleSheetTheme="" theme="" customThemeAssemblies="" />
    <compression enableHtmlCompression="false" enableCallbackCompression="true" enableResourceCompression="true" enableResourceMerging="true" />
    <settings doctypeMode="Xhtml" rightToLeft="false" />
    <errors callbackErrorRedirectUrl="" />
  </devExpress>
  <ImageGear.Web.DataProviders.ImageProvider default="FileImageDataProvider">
    <providers>
      <add name="FileImageDataProvider" type="ImageGear.Web.DataProviders.FileImageDataProvider,ImageGear21.Web.Services" artDataFileNameFormat="{0}.xml" storageRootPath="~/Images/" artStorageRootPath="~/Images/" maxImageSizeToCache="512" cachingTimeLimit="50" cachingEnable="false" />
    </providers>
  </ImageGear.Web.DataProviders.ImageProvider>
  <system.diagnostics>
    <sharedListeners>
      <add name="imageGearListener" type="System.Diagnostics.TextWriterTraceListener" />
    </sharedListeners>
    <switches>
      <add name="imageGearSwitch" value="Verbose" />
    </switches>
    <sources>
      <source name="ImageGear.Web" switchName="imageGearSwitch">
        <listeners>
          <add name="imageGearListener" traceOutputOptions="DateTime" type="System.Diagnostics.TextWriterTraceListener" initializeData="ImageGear.Web.log" />
        </listeners>
      </source>
    </sources>
  </system.diagnostics>
  <system.web.extensions>
    <scripting>
      <scriptResourceHandler enableCaching="false" enableCompression="false" />
    </scripting>
  </system.web.extensions>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
</configuration>